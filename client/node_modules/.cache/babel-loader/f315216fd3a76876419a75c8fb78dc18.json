{"ast":null,"code":"const ADD_POST = \"ADD_POST\";\nconst ADD_LIKE = \"ADD_LIKE\";\nconst CHANGE_NEW_POST_TEXT = \"CHANGE_NEW_POST_TEXT\";\nlet store = {\n  _notifySubscriber() {\n    console.log(\"no\");\n  },\n\n  subscribe(subscriber) {\n    this.notifySubscriber = subscriber;\n  },\n\n  _state: {\n    postState: {\n      posts: [{\n        id: 0,\n        text: \"Hello, my name is Vlad\",\n        likes: 2\n      }, {\n        id: 1,\n        text: \"Wassup\",\n        likes: 3\n      }],\n      newPostText: \"\"\n    },\n    dialogState: {\n      dialogs: [],\n      messanges: [],\n      newMessageText: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) {\n    switch (action.type) {\n      case \"ADD_POST\":\n        let post = {\n          id: this._state.posts.length,\n          text: this._state.newPostText,\n          likes: 0\n        };\n\n        this._state.posts.push(post);\n\n        break;\n\n      case \"ADD_LIKE\":\n        this._state.posts[action.id].likes++;\n        break;\n\n      case \"CHANGE_NEW_POST_TEXT\":\n        this._state.newPostText = action.text;\n        break;\n\n      default:\n        break;\n    }\n\n    this.notifySubscriber();\n  }\n\n};\nexport default store;\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const addLikeActionCreator = id => {\n  return {\n    type: ADD_LIKE,\n    id: id\n  };\n};\nexport const newPostTextActionCreator = text => {\n  return {\n    type: CHANGE_NEW_POST_TEXT,\n    text: text\n  };\n};","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/lessonwar/hello-world/src/redux/store.js"],"names":["ADD_POST","ADD_LIKE","CHANGE_NEW_POST_TEXT","store","_notifySubscriber","console","log","subscribe","subscriber","notifySubscriber","_state","postState","posts","id","text","likes","newPostText","dialogState","dialogs","messanges","newMessageText","getState","dispatch","action","type","post","length","push","addPostActionCreator","addLikeActionCreator","newPostTextActionCreator"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,KAAK,GAAG;AAEZC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,GAJW;;AAMZC,EAAAA,SAAS,CAACC,UAAD,EAAY;AACnB,SAAKC,gBAAL,GAAwBD,UAAxB;AACD,GARW;;AAUZE,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAC;AACRC,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,IAAI,EAAC,wBAAZ;AAAsCC,QAAAA,KAAK,EAAE;AAA7C,OADK,EAEL;AAACF,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,IAAI,EAAC,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFK,CADC;AAKVC,MAAAA,WAAW,EAAE;AALH,KADJ;AAQNC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,cAAc,EAAC;AAHJ;AARP,GAVI;;AA0BZC,EAAAA,QAAQ,GAAE;AACR,WAAO,KAAKX,MAAZ;AACD,GA5BW;;AA8BZY,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,YAAOA,MAAM,CAACC,IAAd;AACE,WAAK,UAAL;AACA,YAAIC,IAAI,GAAG;AACTZ,UAAAA,EAAE,EAAE,KAAKH,MAAL,CAAYE,KAAZ,CAAkBc,MADb;AAETZ,UAAAA,IAAI,EAAE,KAAKJ,MAAL,CAAYM,WAFT;AAGTD,UAAAA,KAAK,EAAE;AAHE,SAAX;;AAKF,aAAKL,MAAL,CAAYE,KAAZ,CAAkBe,IAAlB,CAAuBF,IAAvB;;AACA;;AAEF,WAAK,UAAL;AACA,aAAKf,MAAL,CAAYE,KAAZ,CAAkBW,MAAM,CAACV,EAAzB,EAA6BE,KAA7B;AACA;;AAEA,WAAK,sBAAL;AACE,aAAKL,MAAL,CAAYM,WAAZ,GAA0BO,MAAM,CAACT,IAAjC;AACA;;AAEA;AAAS;AAlBT;;AAoBA,SAAKL,gBAAL;AACD;;AApDW,CAAZ;AAsDA,eAAeN,KAAf;AAEA,OAAO,MAAMyB,oBAAoB,GAAG,MAAM;AACvC,SAAO;AAAEJ,IAAAA,IAAI,EAAExB;AAAR,GAAP;AACF,CAFM;AAGP,OAAO,MAAM6B,oBAAoB,GAAIhB,EAAD,IAAQ;AAC1C,SAAO;AAAEW,IAAAA,IAAI,EAAEvB,QAAR;AAAkBY,IAAAA,EAAE,EAAEA;AAAtB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMiB,wBAAwB,GAAIhB,IAAD,IAAU;AAChD,SAAO;AAAEU,IAAAA,IAAI,EAAEtB,oBAAR;AAA8BY,IAAAA,IAAI,EAAEA;AAApC,GAAP;AACD,CAFM","sourcesContent":["const ADD_POST = \"ADD_POST\";\r\nconst ADD_LIKE = \"ADD_LIKE\";\r\nconst CHANGE_NEW_POST_TEXT = \"CHANGE_NEW_POST_TEXT\"\r\n\r\nlet store = {\r\n\r\n_notifySubscriber(){\r\n    console.log(\"no\")\r\n},\r\n\r\nsubscribe(subscriber){\r\n  this.notifySubscriber = subscriber;\r\n},\r\n\r\n_state: {\r\n  postState:{\r\n    posts: [\r\n      {id:0, text:\"Hello, my name is Vlad\", likes: 2},\r\n      {id:1, text:\"Wassup\", likes: 3}\r\n],\r\n  newPostText: \"\",\r\n  },\r\n  dialogState: {\r\n    dialogs: [],\r\n    messanges: [],\r\n    newMessageText:\"\"\r\n  }\r\n    \r\n},\r\n\r\ngetState(){\r\n  return this._state;\r\n},\r\n\r\ndispatch(action) {\r\n  switch(action.type){\r\n    case \"ADD_POST\":\r\n    let post = {\r\n      id: this._state.posts.length,\r\n      text: this._state.newPostText,\r\n      likes: 0\r\n  }\r\n  this._state.posts.push(post);\r\n  break;\r\n\r\ncase \"ADD_LIKE\": \r\nthis._state.posts[action.id].likes++;\r\nbreak\r\n\r\ncase \"CHANGE_NEW_POST_TEXT\":\r\n  this._state.newPostText = action.text;\r\n  break\r\n\r\n  default: break;\r\n  }\r\n  this.notifySubscriber();\r\n}\r\n}\r\nexport default store;\r\n\r\nexport const addPostActionCreator = () => {\r\n   return { type: ADD_POST }\r\n}\r\nexport const addLikeActionCreator = (id) => {\r\n  return { type: ADD_LIKE, id: id }\r\n}\r\nexport const newPostTextActionCreator = (text) => {\r\n  return { type: CHANGE_NEW_POST_TEXT, text: text }\r\n}"]},"metadata":{},"sourceType":"module"}